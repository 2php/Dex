<!DOCTYPE html>
<meta charset="utf-8">
<style>
  html,body{
    height : 100%;
    min-height : 100%;
    width : 100%;
    min-width : 100%;
  }

#ChartArea1 {
    float: left;
    width: 50%;
    height: 100%;
    overflow:hidden;
}

#ChartArea2 {
  float: left;
  width: 50%;
  height: 100%;
  overflow:hidden;
}

<%
  println new File("javascript/jqueryui/latest/jquery-ui.min.css").text
  println new File("javascript/jqueryui/latest/jquery-ui.theme.min.css").text
%>
</style>
<html>
  <head>
    <title>DexCharts : Parallel Coordinates To Chord</title>
  </head>
  <body>
<div id="ChartArea1"></div>
<div id="ChartArea2"></div>
<script>
<%
  println new File("javascript/jquery/latest/jquery-2.1.3.min.js").text
  println new File("javascript/jqueryui/latest/jquery-ui.min.js").text
  println new File("javascript/underscore/latest/underscore-min.js").text
  println new File("javascript/dexjs/latest/dex.min.js").text

  println dexData.toCsvString();
%>

var pcChart = dex.charts.d3.ParallelCoordinates({
  'parent'  : "#ChartArea1",
  'id'      : "ParChart",
  'csv'     : csv,
});

var chord = dex.charts.d3.Chord({
  'parent' : "#ChartArea2",
  'id'     : "Chord",
  'csv'    : csv
});

chord.subscribe(pcChart, "select", function(msg) {
  chord.attr('csv', msg.selected).update();
});

pcChart.load("dexjs-config-pc");
pcChart.render();

chord.load("dexjs-config-chord");
chord.render();

function getGuiDefinition()
{
  var guiDef = {
    'pc'   : pcChart.getGuiDefinition(),
    'chord': chord.getGuiDefinition()
  };

  return JSON.stringify(guiDef);
}

function setValue(chartName, key, value)
{
  switch (chartName) {
    case "pc":
    {
      pcChart.attr(key, value).update();
      pcChart.save("dexjs-config-pc");
      break;
    }
    case "chord":
    {
      chord.attr(key, value).update();
      chord.save("dexjs-config-chord");
      break;
    }
  }
}
</script>
</body>
</html>