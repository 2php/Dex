<!DOCTYPE html>
<meta charset="utf-8">

<style>

        text {
            font: 12px sans-serif;
        }
        svg {
            display: block;
        }
        html, body, #chart, svg {
            margin: 0px;
            padding: 0px;
            height: 100%;
            width: 100%;
        }

<% println new File("javascript/nvd3/latest/nv.d3.min.css").text %>

</style>

<body>

  <div id="chart">
    <svg></svg>
  </div>

<script>
<%
  println new File("javascript/d3/latest/d3.min.js").text
  println new File("javascript/nvd3/latest/nv.d3.min.js").text
  //println new File("javascript/dexjs/latest/dex.js").text
%>
</script>

<%
  def dexHeader = dexData.getNumericColumns()
  def colMap = dexData.getColumnMap()
%>

<script type="text/javascript">

var data = [
<%
  def seriesList = []
  def si = dexHeader.size()-1;

  xCol = colMap[dexHeader[0]]
  sizeCol = colMap[dexHeader[-1]]

  (1..(si-1)).each
  {
    i ->
    def series = "{key: '${dexHeader[i]}', values: ["
    def points = []
    colMap[dexHeader[i]].eachWithIndex
    {
      col, ri ->
      points << "{x:${xCol[ri]},y:${col},size:${sizeCol[ri]}}"
    }
    series += points.join(",") + "]}";
    seriesList << series;
  }
  println seriesList.join(",\n")
%>
];

 nv.addGraph(function() {
    var chart = nv.models.scatterChart()
      .margin({left:100, right:40, top:40, bottom:40})
                  .showDistX(true)
                  .showDistY(true)
                  .color(d3.scale.category10().range());
  
    chart.xAxis.tickFormat(d3.format('.0f'))
    chart.yAxis.tickFormat(d3.format('.0f'))
  
   d3.select('#chart svg')
       .datum(data)
     .transition().duration(500)
       .call(chart);
 
   nv.utils.windowResize(chart.update);
 
   return chart;
 });


</script>