<!DOCTYPE html>
<meta charset="utf-8">
<style>
    html, body, #ChartArea {
        height: 100%;
        min-height: 100%;
        width: 100%;
        min-width: 100%;
    }

    ul {
        list-style-type: none;
    }

    li {
        list-style: none;
        font-weight: bold;
    }

    #widget-table {
        width: 100%;
        height: 100%;
        max-width: 100%;
        max-height: 100%;
        table-layout: fixed !important;
    }

    #widget-header-row {
        width: 100%;
        height: 20px;
    }

    #widget-header {
        width: 100%;
        height: 20px;
        background-color: #4f934e;
        color: white;
    }

    #widget-content {
        width: 100%;
        height: 100%;
    }
    
    #widget-content div {
        width: 100%;
        height: 100%;
    }

    .btn:hover {
        opacity: .7 !important;
    }

    .gridster {
        width: 100%;
        height: 100%;
    }

    .gridster .gs-w {
        background: white;
        cursor: pointer;
        -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
        overflow: hidden;
    }

    .gridster .player {
        -webkit-box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.3);
        box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.3);
        background: #BBB;
    }

    .gridster .preview-holder {
        border: none !important;
        border-radius: 0 !important;
        background: red !important;
    }

    .gridster ul {
        background-color: #EFEFEF;
        padding-left: 0px;
        width: 100% !important;
        min-height: 100px !important;
    }

    .gridster li {
        font-size: 1em;
        font-weight: bold;
        text-align: center;
        line-height: 100%;
    }

    ul {
        list-style-type: none;
    }

    li {
        list-style: none;
        font-weight: bold;
    }

<%
  println new File("javascript/jqueryui/latest/jquery-ui.min.css").text
  println new File("javascript/jqueryui/latest/jquery-ui.theme.min.css").text
  println new File("javascript/gridster/latest/jquery.gridster.min.css").text
%>
</style>

<html>
  <head>
    <title>dex.js : Chord Multiples</title>
  </head>
  <body>
  <div id="ChartArea"></div>
<script>
<%
  println new File("javascript/jquery/latest/jquery-2.1.3.min.js").text
  println new File("javascript/jqueryui/latest/jquery-ui.min.js").text
  println new File("javascript/underscore/latest/underscore-min.js").text
  println new File("javascript/dexjs/latest/dex.js").text
  println new File("javascript/gridster/latest/jquery.gridster.min.js").text

  println dexData.toCsvString()
%>

  var frames = dex.csv.getFramesByIndex(csv, 0);

  
  var base = new dex.component({
      'margin' : { 'left':30, 'right':30, 'left':30, 'right':30 }
    });

  base.load("dexjs-config-chord");
  var basechart = dex.charts.d3.Chord(base.attr());

  var multipleBase = new dex.component({
    'parent': '#ChartArea',
    'frames': frames,
    'gridsterConfig.widget_base_dimensions' : [ 50, 50 ],
    'gridsterConfig.widget_margins' : [ 1, 1 ],
    'cell.width' : 8,
    'cell.height' : 8
  });
  multipleBase.load("dexjs-config-multiples");

  var multiples = dex.charts.multiples.GridsterMultiples(
    multipleBase.attr());
  multiples.attr('baseChart', basechart);
  multiples.render();


function setValue(chartName, key, value)
{
  switch (chartName) {
    case "multiples":
    {
      multipleBase.attr(key, value);
      multipleBase.save("dexjs-config-multiples");
      multiples.attr(key, value).render();
      break;
    }
    case "basechart":
    {
      // REM: Due to the fact that clone only clones originally
      // supplied construction parameters, here we create a new
      // chart from all the parameters of the old one.  Kind of
      // cumbersome until i figure out a better way to separate
      // user configured things from automatic settings.
      base.attr(key, value);
      base.save("dexjs-config-chord");
      var newBase = dex.charts.d3.Chord(base.attr());
      multiples.attr("baseChart", newBase);      
      multiples.render();
      break;
    }
  }
}

function getGuiDefinition()
{
  var guiDef = {
    'multiples': multiples.getGuiDefinition(),
    'basechart': multiples.attr("charts")[0].getGuiDefinition()
  };

  return JSON.stringify(guiDef);
}

</script>
</body>
</html>