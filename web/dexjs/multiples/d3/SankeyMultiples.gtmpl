<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">

<%
import static com.dexvis.util.GroovyUtil.renderTemplate as render;

println render("web/include/styles.inc", [:])
println render("web/include/scripts.inc", [:])
%>
<style>

    ul {
        list-style-type: none;
    }

    li {
        list-style: none;
        font-weight: bold;
    }

    #widget-table {
        width: 100%;
        height: 100%;
        max-width: 100%;
        max-height: 100%;
        table-layout: fixed !important;
    }

    #widget-header-row {
        width: 100%;
        height: 20px;
    }

    #widget-header {
        width: 100%;
        height: 20px;
        background-color: #4f934e;
        color: white;
    }

    #widget-content {
        width: 100%;
        height: 100%;
    }
    
    #widget-content div {
        width: 100%;
        height: 100%;
    }

    .btn:hover {
        opacity: .7 !important;
    }

    .gridster {
        width: 100%;
        height: 100%;
    }

    .gridster .gs-w {
        background: white;
        cursor: pointer;
        -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
        overflow: hidden;
    }

    .gridster .player {
        -webkit-box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.3);
        box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.3);
        background: #BBB;
    }

    .gridster .preview-holder {
        border: none !important;
        border-radius: 0 !important;
        background: red !important;
    }

    .gridster ul {
        background-color: #EFEFEF;
        padding-left: 0px;
        width: 100% !important;
        min-height: 100px !important;
    }

    .gridster li {
        font-size: 1em;
        font-weight: bold;
        text-align: center;
        line-height: 100%;
    }

    ul {
        list-style-type: none;
    }

    li {
        list-style: none;
        font-weight: bold;
    }

<%
  println new File("javascript/gridster/latest/jquery.gridster.min.css").text
%>
</style>
<script>
<% println new File("javascript/gridster/latest/jquery.gridster.min.js").text %>
</script>
<title>dex.js : Sankey Multiples</title>
</head>
  <body>
  <div id="ChartArea"></div>
<script>
<%
  println dexData.toCsvString()
%>

var frames = dex.csv.getFramesByIndex(csv, 0);

var base = new dex.component({});

base.load("dexjs-config-d3-sankey");
basechart = dex.charts.d3.Sankey(base.attr());

var multipleBase = new dex.component({
  'parent': '#ChartArea',
  'frames': frames,
  'gridsterConfig.widget_base_dimensions' : [ 50, 50 ],
  'gridsterConfig.widget_margins' : [ 1, 1 ],
  'cell.width' : 8,
  'cell.height' : 8
});
multipleBase.load("dexjs-config-multiples");

var multiples = dex.charts.multiples.GridsterMultiples(
multipleBase.attr());
multiples.attr('baseChart', basechart);
multiples.render();
  
function setValues(values)
{
  values.forEach(function(config) {
    switch (config.chartName) {
      case "multiples":
      {
        multiples.attr(config.key, config.value);
        break;
      }
      case "basechart":
      {
        base.attr(config.key, config.value);
        break;
      }
    }
  });
  base.save("dexjs-config-d3-sankey");
  var newBase = dex.charts.d3.Sankey(base.attr());
  multiples.attr("baseChart", newBase);  
  multipleBase.save("dexjs-config-multiples");
  multiples.render();
}

function getGuiDefinition()
{
  var guiDef = {
    'multiples': multiples.getGuiDefinition(),
    'basechart': multiples.attr("charts")[0].getGuiDefinition()
  };

  return JSON.stringify(guiDef);
}

</script>
</body>
</html>